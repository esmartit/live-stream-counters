spring.application.name: smartpoke-live-stream-counters
server.port: "${SERVER_PORT:9000}"
spring:
  jmx:
    enabled: false
  cloud.stream:
    kafka:
      streams:
        binder:
          brokers: "${KAFKA_BROKER_HOST}"
          configuration:
            default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
            default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
            commit.interval.ms: 1000
    bindings:
      input:
        destination: "smartpoke-device-presence"
        group: "smartpoke.lsc.device-presence"
      output:
        destination: "smartpoke-device-position"
      sensor-settings-input:
        destination: "smartpoke-sensor-settings"
        group: "smartpoke.lsc.sensor-settings"
        consumer.materializedAs: sensor-settings-store
      unique-devices-detected-count-input:
        destination: "smartpoke-device-position"
        group: "smartpoke.lsc.device-position.unique-devices"
      unique-devices-detected-count-output:
        destination: "smartpoke-unique-devices-detected-count"
      registered-unique-devices-input:
        destination: "smartpoke-registered-users"
        group: "smartpoke.lsc.smartpoke-registered-users"
      registered-unique-devices-count-output:
          destination: "smartpoke-registered-users-count"


management:
#  endpoint:
#    health:
#      group:
#        readiness:
#          include: readinessState
  health:
    probes:
      enabled: true
  endpoints:
    web:
      exposure:
        include: metrics, health, prometheus
#        include: "*"